---
- name: Add Tower inventory, update, or destroy inventory
  tower_inventory:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    organization: "{{ item.organization }}"
    state: present
  with_items: "{{ tower_inventories }}"

- name: registering ID of inventory
  shell: tower-cli inventory create -n "{{ item.name | quote }}" --organization "{{ item.organization | quote }}" | grep "{{ item.name | quote }}" #| awk '{print $1}'
  register: command_output
  with_items: "{{ tower_inventories }}"

- debug: var=command_output

- set_fact:
    inventories_list: "{{ command_output | json_query('results[].stdout') }}"

- debug: var=inventories_list

- debug:
    msg: "Match: {{ item[1].name }} to {{ item[0] }}  - id {{ item[0].split(' ')[1] }}"
  when: item[0].find(item[1].name | quote) != -1
  with_nested:
    - "{{ inventories_list | list }}"
    - "{{ tower_inventories }}"

- name: Add source to inventory project
  shell: tower-cli inventory_source create -n "{{ item[1].name | quote }}" --inventory "{{ item[0].split(' ')[1] }}" --source-project "{{item[1].project | quote }}" --source "{{item[1].source | quote }}" --overwrite true --overwrite-vars true
  when: item[0].find(item[1].name | quote) != -1
  with_nested:
    - "{{ inventories_list | list }}"
    - "{{ tower_inventories }}"

- name: Update Inventory for tower-inventory
  command: >
    tower-cli inventory batch_update
      --name "{{ item.name }}"
      --wait
      "{{ tower_cli_verbosity }}"
  with_items: "{{ tower_inventories }}"
