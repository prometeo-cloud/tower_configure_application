#! /bin/bash

# Script to bootstrap Ansible Tower
# Assumes that tower-cli is installed and configured

TOWER_CLI="/bin/tower-cli"
ORGANIZATION="Default"
ORGANIZATION_ID=1
###

############################################
#          CONFIGURE LICENSE               #
############################################

${TOWER_CLI} setting modify LICENSE '{{ tower_license | to_json }}'
###


############################################
#            CONFIGURE LDAP                #
############################################

{% for key, value in ldap_configuration.iteritems() %}
${TOWER_CLI} setting modify {{ key  | upper }} "{{ value }}"
{% endfor %}
###

###############################################
#             CREATE TEAMS                    #
###############################################
{% for team in tower_teams %}
${TOWER_CLI} team create -n "{{ team }}" --organization ${ORGANIZATION}
{% endfor %}
###

############################################
#          CONFIGURE CREDENTIALS           #
############################################

# SCM CREDENTIALS
{% for scm_key in tower_scm_keys %}
{% if scm_key['type'] == "password" %}

${TOWER_CLI} credential create -n "{{ scm_key['name'] }}"  --organization ${ORGANIZATION} --kind scm --username "{{ scm_key['username']  }}" --password "{{ scm_key['password']  }}"

{% endif %}
{% if scm_key['type'] == "key" %}

${TOWER_CLI} credential create -n "{{ scm_key['name'] }}"  --organization ${ORGANIZATION} --kind scm --ssh-key-data "{{ scm_key['path'] }}"

{% endif %}

{% for grant_type,teams in scm_key['grant'].iteritems() %}
{% for team in teams %}
${TOWER_CLI} role grant --type "{{ grant_type }}" --team "{{ team }}"  --credential "{{ scm_key['name'] }}"
{% endfor %}
{% endfor %}
{% endfor %}
# Machine CREDENTIALS

{% for ssh_key in tower_ssh_keys %}

${TOWER_CLI} credential create -n "{{ ssh_key['name'] }}" --organization ${ORGANIZATION} --kind ssh --ssh-key-data "{{ ssh_key['path'] }}" --username "{{ ssh_key['username'] }}"

{% for grant_type,teams in ssh_key['grant'].iteritems() %}
{% for team in teams %}
${TOWER_CLI} role grant --type "{{ grant_type }}" --team "{{ team }}"  --credential "{{ ssh_key['name'] }}"
{% endfor %}
{% endfor %}
{% endfor %}


###


############################################
#            CREATE PROJECT                #
############################################

{% for project in tower_projects %}
${TOWER_CLI} project create -n "{{ project['name'] }}" -d "{{ project['description'] }}"  --organization ${ORGANIZATION} --scm-type "{{ project['scm_type'] }}" --scm-url  "{{ project['scm_url'] }}" --scm-branch "{{ project['scm_branch'] }}" --scm-clean {{ project['scm_clean'] }} --scm-credential "{{ project['scm_credential'] }}" --wait
{% for grant_type,teams in project['grant'].iteritems() %}
{% for team in teams %}
${TOWER_CLI} role grant --type "{{ grant_type }}" --team "{{ team }}"   --project "{{ project['name'] }}"
{% endfor %}
{% endfor %}
{% endfor %}


# TODO find a way of parametrising this
AWX_DIRECTORY=$( ${TOWER_CLI} project get -n "Openshift Automation"  -f yaml | awk '/local_path/{ print $2; }' )

PROJECT_DIRECTORY="/var/lib/awx/projects/${AWX_DIRECTORY}"
###


############################################
#            UPDATE PROJECT                #
############################################

# Get Project ID
PROJECT_ID=`${TOWER_CLI} project list | grep 'Openshift Automation' | awk '{ print $1; }'`

# Refresh the project by ID
${TOWER_CLI} project update ${PROJECT_ID} --wait
###


############################################
#            CREATE INVENTORY              #
############################################

# Engineering Environments
{% for inventory in inventories %}
INVENTORY_ID=`${TOWER_CLI} inventory create -n "{{ inventory }}"  --organization "${ORGANIZATION}" |  grep  '{{ inventory }}' | awk '{print $1; }'`

${TOWER_CLI} role grant --team "Engineering" --inventory "{{ inventory }}" --type read
${TOWER_CLI} role grant --team "Engineering" --inventory "{{ inventory }}" --type use 

/usr/bin/tower-manage inventory_import --inventory-name "{{ inventory }}"  --source="${PROJECT_DIRECTORY}/inventories/{{ inventory }}/" --overwrite --overwrite-vars -v 3

{% endfor %}
